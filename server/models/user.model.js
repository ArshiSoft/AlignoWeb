const mongoose = require('mongoose')
const User = new mongoose.Schema({
    
    clinicname: { type: String, require: true },
    doctorname: { type: String, require: true },
    doctornumber: { type: Number, require: true },
    doctoremail: { type: String, require: true, unique :true },
    patienid: { type: Number, require: true },
    patientname: { type: String, require: true },
    patientnumber: { type: Number, require: true },
    patientemail: { type: String, require: true, unique :true },
    gender: { type: String, require: true },
    email: { type: String, require: true, unique :true },
    pcop: { type: String, require: true },
    archesvalue: { type: String, require: true },
    lowermidline: { type: String, require: true },
    uppermidline: { type: String, require: true },
    mrcir: { type: String },
    mrcil: { type: String },
    mrciir: { type: String },
    mrciil: { type: String },
    mrciiir: { type: String },
    mrciiil: { type: String },
    crcir: { type: String },
    crcil: { type: String },
    crciir: { type: String },
    crciil: { type: String },
    crciiir: { type: String },
    crciiil: { type: String },
    bridgesimplant: { type: String  },
    lowermidlinemaintain: { type: String  },
    lowermidlineimprove: { type: String  },
    lowermidlineideal: { type: String  },
    uppermidlinemaintain: { type: String  },
    uppermidlineimprove: { type: String  },
    uppermidlineidela: { type: String  },
    upperoverbitemaintain: { type: String  },
    overbiteimprove: { type: String  },
    overbiteideal: { type: String  },
    overjetmaintain: { type: String  },
    overjetimprove: { type: String  },
    overjetideal: { type: String  },
    molarrelationmaintain: { type: String  },
    molarrelationimrpove: { type: String  },
    molarrelationideal: { type: String  },
    caninerelationmaintain: { type: String  },
    caninerelationimprove: { type: String  },
    caninerelationideal: { type: String  },
    archformmaintain: { type: String  },
    archformimprove: { type: String  },
    archformideal: { type: String  },
    posteriorcrossbitemaintain: { type: String },
    posteriorcrossbiteimprove: { type: String  },
    posteriorcrossbiteideal: { type: String  },
    procline: { type: String, require: true },
    ipr: { type: String, require: true },
    expand: { type: String, require: true },
    engagers: { type: String, require: true },
    distalize: { type: String, require: true },
    aeot: { type: String, require: true },
    etbt: { type: String, require: true },
},    {collection: 'user-data'}

)
const model = mongoose.model('UserData', User)

module.exports = model